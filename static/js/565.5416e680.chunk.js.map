{"version":3,"file":"static/js/565.5416e680.chunk.js","mappings":"kLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0B,SCa7K,EAVmB,SAACA,GAChB,IAAMC,EAAI,qBAAiBD,EAAME,IACjC,OACE,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAIjC,ECDD,EAPgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA2BJ,EAAMO,SAGxC,E,iDCHKC,GAAcC,EAAAA,EAAAA,GAAiB,IAgBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAduB,SAACX,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BAEI,SAACC,EAAA,EAAD,CAAOR,KAAM,iBAAkBS,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUV,GAAcW,YAAY,0BAEvG,0BACI,yCAIf,IC8BD,EA1CgB,SAACnB,GAEb,IAAMoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,GAArC,IACzCwB,EAAkBN,EAAMO,aAAaH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASrB,QAASqB,EAAErB,QAAoBL,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,GAAxC,IACzBkB,EAAMS,eAiB7B,OAAK7B,EAAM8B,QAGP,iBAAK3B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKkB,KAGL,iBAAKnB,UAAWC,EAAhB,WACI,yBAAMsB,KACN,SAAC,EAAD,CAAgBd,SAhBN,SAACmB,GAEnB/B,EAAMgC,YAAYD,EAAOF,eAC5B,WAGyB,SAAC,KAAD,CAAUxB,GAAI,UAgB3C,E,8BCjBD,GAAe4B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAvBoB,SAACd,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAE0B,SAACc,GACxB,MAAO,CACHH,YAAa,SAACH,GACVM,GAASC,EAAAA,EAAAA,GAAmBP,GAC/B,EAER,IAYGQ,EAAAA,EAFJ,CAGCC,E","sources":["webpack://react1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForms/AddMessageForms.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__PwvW0\",\"dialogsItems\":\"Dialogs_dialogsItems__3r4Y2\",\"dialog\":\"Dialogs_dialog__D+HZQ\",\"active\":\"Dialogs_active__TFc68\",\"messages\":\"Dialogs_messages__UU-0X\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    const path = `'/dialogs/'${props.id}`;\r\n    return (\r\n      <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink> \r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n   \r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {/* <Field component={'textarea'} name={'newMessageBody'} placeholder={'Enter you message'} /> */}\r\n                <Field name={'newMessageBody'} component={Textarea} validate={[required, maxLength50]} placeholder='Enter post message' />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n","import React from \"react\";\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/dialogs-reducer\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForms/AddMessageForms\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    const messagesElemets = state.messagesData.map(m => <Message message={m.message} key={m.id} id={m.id} />);\r\n    const newMessageBody = state.newMessageBody;\r\n\r\n    // const onSendMessageClick = () => {\r\n    //     props.sendMessage();\r\n    // }\r\n    // const onNewMessageChange = (event) => {\r\n    //     const body = event.target.value;\r\n    //     props.updateNewMessageBodyBody(body);\r\n    // }\r\n\r\n    // эта функция запускается после сабмита формы\r\n    const addNewMessage = (values) => {\r\n        // alert(values.newMessageBody)\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElemets}</div>\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from 'react-redux';\r\n\r\n// тут мы говорим - компонента - перерисуйся если изменятся dialogsPage\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ниже указано кака переделали\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n// export default DialogsContainer;\r\n\r\n// сюда закидываем функции снижу ввверх\r\n// звучит так: Возьми диалогс, потом закинь в withAuthRedirect, и потом в connect\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs);\r\n\r\n\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogsData","map","d","messagesElemets","messagesData","m","newMessageBody","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}